(window["webpackJsonpVXETable"]=window["webpackJsonpVXETable"]||[]).push([["start"],{"0aa1":function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},l=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("h2",[e._v("Theme 主题")]),t("p",{staticClass:"tip"},[e._v("Case 1.使用默认的主题样式"),t("br"),t("a",{staticClass:"link",attrs:{href:"https://github.com/xuliangzhan/vxe-table-demo/tree/master/vxe-table-by-vue-custom-theme",target:"_blank"}},[e._v("项目示例")])]),t("pre",[e._v("    "),t("code",{staticClass:"scss"},[e._v("\n      @import 'vxe-table/lib/index.css';\n    ")]),e._v("\n  ")]),t("p",{staticClass:"tip"},[e._v("Case 2.修改主题颜色，并引入所有样式（"),t("a",{staticClass:"link",attrs:{href:"https://github.com/xuliangzhan/vxe-table/blob/master/styles/variable.scss",target:"_blank"}},[e._v("查看所有变量")]),e._v("）"),t("br"),t("a",{staticClass:"link",attrs:{href:"https://github.com/xuliangzhan/vxe-table-demo/tree/master/vxe-table-by-vue-custom-theme",target:"_blank"}},[e._v("项目示例")])]),t("pre",[e._v("    "),t("code",{staticClass:"scss"},[e._v("\n      @import 'vxe-table/styles/variable.scss';\n\n      // 局部修改变量\n      $vxe-font-size: 14px;\n      $vxe-font-color: #666;\n      $vxe-primary-color: #409eff;\n\n      @import 'vxe-table/styles/default.scss';\n    ")]),e._v("\n  ")]),t("p",{staticClass:"tip"},[e._v("Case 3.修改主题颜色，并按需引入样式（"),t("a",{staticClass:"link",attrs:{href:"https://github.com/xuliangzhan/vxe-table/blob/master/styles/variable.scss",target:"_blank"}},[e._v("查看所有变量")]),e._v("）"),t("br"),t("a",{staticClass:"link",attrs:{href:"https://github.com/xuliangzhan/vxe-table-demo/tree/master/vxe-table-by-vue-custom-theme",target:"_blank"}},[e._v("项目示例")])]),t("pre",[e._v("    "),t("code",{staticClass:"scss"},[e._v("\n      @import 'vxe-table/styles/variable.scss';\n\n      // 局部修改变量\n      $vxe-font-size: 14px;\n      $vxe-font-color: #666;\n      $vxe-primary-color: #409eff;\n\n      @import 'vxe-table/styles/icon.scss';\n      @import 'vxe-table/styles/table.scss';\n      @import 'vxe-table/styles/column.scss';\n      @import 'vxe-table/styles/header.scss';\n      @import 'vxe-table/styles/body.scss';\n      @import 'vxe-table/styles/footer.scss';\n      @import 'vxe-table/styles/filter.scss';\n      @import 'vxe-table/styles/loading.scss';\n      @import 'vxe-table/styles/grid.scss';\n      @import 'vxe-table/styles/menu.scss';\n      @import 'vxe-table/styles/toolbar.scss';\n      @import 'vxe-table/styles/pager.scss';\n      @import 'vxe-table/styles/checkbox.scss';\n      @import 'vxe-table/styles/radio.scss';\n      @import 'vxe-table/styles/input.scss';\n      @import 'vxe-table/styles/button.scss';\n      @import 'vxe-table/styles/modal.scss';\n      @import 'vxe-table/styles/tooltip.scss';\n    ")]),e._v("\n  ")]),t("p",[e._v("Case 4.如果需要完全重写主题样式，把 vxe-table/styles/** 目录全部复制到项目中自行修改（例如 /assets/styles/xtable 目录下）")]),t("pre",[e._v("    "),t("code",{staticClass:"scss"},[e._v("\n      @import './assets/styles/xtable/index.scss';\n    ")]),e._v("\n  ")])])}],s=(t("a630"),t("3ca3"),t("159b"),t("1487")),i=t.n(s),r={mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){i.a.highlightBlock(e)}))}},o=r,c=t("2877"),d=Object(c["a"])(o,a,l,!1,null,null,null);n["default"]=d.exports},"28e4":function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("h1",[e._v("全局工具栏按钮注册器")]),t("p",{staticClass:"tip"},[e._v("你可以很简单的将工具栏中常用的按钮注册成全局可复用的")]),t("vxe-table",{attrs:{resizable:"","highlight-current-row":"","highlight-hover-row":"","highlight-current-column":"",data:e.tableData}},[t("vxe-table-column",{attrs:{field:"name",title:"app.api.title.prop","min-width":"280","tree-node":""}}),t("vxe-table-column",{attrs:{field:"desc",title:"app.api.title.desc","min-width":"200"}}),t("vxe-table-column",{attrs:{field:"type",title:"app.api.title.type","min-width":"140"}}),t("vxe-table-column",{attrs:{field:"enum",title:"app.api.title.enum","min-width":"150"}}),t("vxe-table-column",{attrs:{field:"defVal",title:"app.api.title.defVal","min-width":"160"}})],1),t("h2",[e._v("示例")]),t("pre",[e._v("    "),t("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),t("code",{staticClass:"html"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n  ")])],1)},l=[],s=(t("a630"),t("3ca3"),t("159b"),t("1487")),i=t.n(s),r={data:function(){return{tableData:[{name:"add(code, callback)",desc:"添加",version:"",type:"",enum:"",defVal:"code, callback",list:[]},{name:"mixin(map)",desc:"混合多个",version:"",type:"",enum:"",defVal:"map",list:[]},{name:"delete(code)",desc:"删除",version:"",type:"",enum:"",defVal:"name",list:[]}],demoCodes:['\n        <vxe-toolbar :buttons="toolbarButtons"></vxe-toolbar>\n\n        <vxe-table\n          border\n          :data="tableData">\n          <vxe-table-column type="seq" width="60"></vxe-table-column>\n          <vxe-table-column field="name" title="Name" :edit-render="{name: \'input\'}"></vxe-table-column>\n          <vxe-table-column field="sex" title="sex"></vxe-table-column>\n          <vxe-table-column field="age" title="Age"></vxe-table-column>\n        </vxe-table>\n        ',"\n        VXETable.buttons.add('exportBtn', (params, event) => {\n          let { $table, code, button } = params\n          $table.exportData()\n        })\n\n        export default {\n          data () {\n            return {\n              tableData: [],\n              toolbarButtons: [\n                {\n                  code: 'exportBtn',\n                  name: '导出.csv'\n                }\n              ]\n            }\n          },\n          created () {\n            this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n          }\n        }\n        "]}},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){i.a.highlightBlock(e)}))}},o=r,c=t("2877"),d=Object(c["a"])(o,a,l,!1,null,null,null);n["default"]=d.exports},"32c2":function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("p",{staticClass:"tip"},[e._v(" 默认的渲染器 "),t("table-column-api-link",{attrs:{prop:"cell-render"}}),t("br"),e._v(" 配置参数："),t("br"),e._v(" renderDefault (h, cellRender, { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }, context) 渲染函数"),t("br"),t("span",{staticClass:"red"},[e._v("（注：实际开发中应该将业务封装成一个组件，不要把复杂的渲染逻辑写在渲染器中）")])],1),t("vxe-table",{attrs:{border:"",data:e.tableData}},[t("vxe-table-column",{attrs:{type:"seq",width:"60"}}),t("vxe-table-column",{attrs:{field:"name",title:"Name","cell-render":{name:"MyLink",events:{click:e.linkEvent}}}}),t("vxe-table-column",{attrs:{field:"sex",title:"sex"}}),t("vxe-table-column",{attrs:{field:"age",title:"Age"}})],1),t("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),t("pre",[e._v("    "),t("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),t("code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n    "),t("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[2]))]),e._v("\n  ")])],1)},l=[],s=(t("a630"),t("fb6a"),t("b0c0"),t("3ca3"),t("159b"),t("1487")),i=t.n(s),r=(t("a5a8"),{data:function(){return{tableData:[],demoCodes:["\n        // 创建一个超链接渲染器\n        VXETable.renderer.add('MyLink', {\n          // 默认显示模板\n          renderDefault (h, cellRender, params) {\n            let { row, column } = params\n            let { events } = cellRender\n            return [\n              <a class=\"my-link\" onClick={ () => events.click(params) }>{row[column.property]}</a>\n            ]\n          }\n        })\n        ",'\n        <vxe-table\n          border\n          :data="tableData">\n          <vxe-table-column type="seq" width="60"></vxe-table-column>\n          <vxe-table-column field="name" title="Name" :cell-render="{name: \'MyLink\', events: {click: linkEvent}}"></vxe-table-column>\n          <vxe-table-column field="sex" title="sex"></vxe-table-column>\n          <vxe-table-column field="age" title="Age"></vxe-table-column>\n        </vxe-table>\n        ',"\n        export default {\n          data () {\n            return {\n              tableData: []\n            }\n          },\n          created () {\n            this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n          },\n          methods: {\n            linkEvent ({ row }) {\n              console.log(row.name)\n            }\n          }\n        }\n        "]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){i.a.highlightBlock(e)}))},methods:{linkEvent:function(e){var n=e.row;console.log(n.name)}}}),o=r,c=t("2877"),d=Object(c["a"])(o,a,l,!1,null,null,null);n["default"]=d.exports},"335c":function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("h1",[e._v(e._s(e.$t("app.aside.nav.interceptor")))]),e._m(0),t("vxe-table",{staticClass:"api-table",attrs:{resizable:"","highlight-current-row":"","highlight-hover-row":"","highlight-current-column":"",data:e.tableData}},[t("vxe-table-column",{attrs:{field:"name",title:"app.api.title.prop","min-width":"280","tree-node":""}}),t("vxe-table-column",{attrs:{field:"desc",title:"app.api.title.desc","min-width":"200"}}),t("vxe-table-column",{attrs:{field:"type",title:"app.api.title.type","min-width":"140"}}),t("vxe-table-column",{attrs:{field:"enum",title:"app.api.title.enum","min-width":"150"}}),t("vxe-table-column",{attrs:{field:"defVal",title:"app.api.title.defVal","min-width":"160"}}),t("vxe-table-column",{attrs:{field:"version",title:e.$t("app.api.title.version"),width:"120"},scopedSlots:e._u([{key:"default",fn:function(n){var a=n.row;return[t("span",{directives:[{name:"show",rawName:"v-show",value:a.version,expression:"row.version"}],staticClass:"compatibility"},[e._v("v"+e._s(a.version))])]}}])})],1),t("h2",[e._v("可选值")]),t("vxe-table",{staticClass:"api-table",attrs:{resizable:"","highlight-hover-row":"",data:e.typeList}},[t("vxe-table-column",{attrs:{field:"name",title:"app.api.title.prop","min-width":"280","tree-node":""}}),t("vxe-table-column",{attrs:{field:"desc",title:"app.api.title.desc","min-width":"200"}}),t("vxe-table-column",{attrs:{field:"type",title:"app.api.title.type","min-width":"140"}}),t("vxe-table-column",{attrs:{field:"enum",title:"app.api.title.enum","min-width":"150"}}),t("vxe-table-column",{attrs:{field:"defVal",title:"app.api.title.defVal","min-width":"160"}}),t("vxe-table-column",{attrs:{field:"version",title:e.$t("app.api.title.version"),width:"120"},scopedSlots:e._u([{key:"default",fn:function(n){var a=n.row;return[t("span",{directives:[{name:"show",rawName:"v-show",value:a.version,expression:"row.version"}],staticClass:"compatibility"},[e._v("v"+e._s(a.version))])]}}])})],1),t("h2",[e._v("示例")]),t("p",{staticClass:"tip"},[e._v("例子：比如自定义渲染某个组件后，由于弹出层面板不在单元格之内，按键事件的交互行为存在冲突，对于这些场景就很有用了")]),t("pre",[e._v("    "),t("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n  ")])],1)},l=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("p",{staticClass:"tip"},[e._v("通过内置事件拦截器可以很容易的处理表格事件行为与第三方组件的兼容性；比如这些插件 "),t("a",{staticClass:"link",attrs:{href:"https://www.npmjs.com/package/vxe-table-plugin-element",target:"_blank"}},[e._v("vxe-table-plugin-element")])])}],s=(t("a630"),t("3ca3"),t("159b"),t("1487")),i=t.n(s),r={data:function(){return{tableData:[{name:"add(type, callback)",desc:"添加",version:"",type:"",enum:"",defVal:"type, callback",list:[]},{name:"mixin(map)",desc:"混合多个",version:"",type:"",enum:"",defVal:"map",list:[]},{name:"delete(type)",desc:"删除",version:"",type:"",enum:"",defVal:"name",list:[]}],typeList:[{name:"created",desc:"表格初始化时触发",version:"1.15",type:"",enum:"",defVal:"",list:[]},{name:"mounted",desc:"表格挂载时触发",version:"1.15",type:"",enum:"",defVal:"",list:[]},{name:"activated",desc:"表格激活时触发",version:"1.15",type:"",enum:"",defVal:"",list:[]},{name:"deactivated",desc:"表格停用时触发",version:"1.15",type:"",enum:"",defVal:"",list:[]},{name:"beforeDestroy",desc:"表格销毁之前触发",version:"1.15",type:"",enum:"",defVal:"",list:[]},{name:"destroyed",desc:"表格销毁时触发",version:"1.15",type:"",enum:"",defVal:"",list:[]},{name:"event.clearFilter",desc:"清除激活单元格之前触发，允许返回 false 阻止默认行为",version:"1.14",type:"Boolean",enum:"",defVal:"",list:[]},{name:"event.clearActived",desc:"清除筛选面板之前触发，允许返回 false 阻止默认行为",version:"",type:"Boolean",enum:"",defVal:"",list:[]},{name:"event.keydown",desc:"键盘按下之前触发，允许返回 false 阻止默认行为",version:"1.14",type:"Boolean",enum:"",defVal:"",list:[]},{name:"event.showMenu",desc:"显示快捷菜单之前触发，允许返回 false 阻止默认行为",version:"1.14",type:"Boolean",enum:"",defVal:"",list:[]},{name:"event.import",desc:"导入之前触发，允许返回 false 阻止默认行为",version:"1.15.12",type:"Boolean",enum:"",defVal:"",list:[]},{name:"event.export",desc:"导出之前触发，允许返回 false 阻止默认行为",version:"1.15.12",type:"Boolean",enum:"",defVal:"",list:[]}],demoCodes:["\n        VXETable.interceptor.add('event.clearActived', (params, event) => {\n          // 比如点击了某个组件的弹出层面板之后，此时被激活单元格不应该被自动关闭，通过返回 false 可以阻止默认的行为。\n          if (event.target.className.indexOf('other-popper') > -1) {\n            return false\n          }\n        })\n        "]}},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){i.a.highlightBlock(e)}))}},o=r,c=t("2877"),d=Object(c["a"])(o,a,l,!1,null,null,null);n["default"]=d.exports},"358e":function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("h1",[e._v("全局快捷菜单注册器")]),t("p",{staticClass:"tip"},[e._v("你可以很简单的将常用的快捷菜单注册成全局可复用的")]),t("vxe-table",{attrs:{resizable:"","highlight-current-row":"","highlight-hover-row":"","highlight-current-column":"",data:e.tableData}},[t("vxe-table-column",{attrs:{field:"name",title:"app.api.title.prop","min-width":"280","tree-node":""}}),t("vxe-table-column",{attrs:{field:"desc",title:"app.api.title.desc","min-width":"200"}}),t("vxe-table-column",{attrs:{field:"type",title:"app.api.title.type","min-width":"140"}}),t("vxe-table-column",{attrs:{field:"enum",title:"app.api.title.enum","min-width":"150"}}),t("vxe-table-column",{attrs:{field:"defVal",title:"app.api.title.defVal","min-width":"160"}})],1),t("h2",[e._v("示例")]),t("pre",[e._v("    "),t("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),t("code",{staticClass:"html"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n  ")])],1)},l=[],s=(t("a630"),t("3ca3"),t("159b"),t("1487")),i=t.n(s),r={data:function(){return{tableData:[{name:"add(code, callback)",desc:"添加",type:"",enum:"",defVal:"code, callback",list:[]},{name:"mixin(map)",desc:"混合多个",type:"",enum:"",defVal:"map",list:[]},{name:"delete(code)",desc:"删除",type:"",enum:"",defVal:"name",list:[]}],demoCodes:['\n        <vxe-table\n          border\n          :context-menu="{body: {options: bodyMenus}}"\n          :data="tableData">\n          <vxe-table-column type="seq" width="60"></vxe-table-column>\n          <vxe-table-column field="name" title="Name" :edit-render="{name: \'input\'}"></vxe-table-column>\n          <vxe-table-column field="sex" title="sex"></vxe-table-column>\n          <vxe-table-column field="age" title="Age"></vxe-table-column>\n        </vxe-table>\n        ',"\n        VXETable.menus.add('exportData', (params, event) => {\n          let { $table } = params\n          $table.exportData()\n        })\n\n        VXETable.menus.add('insert', (params, event) => {\n          let { $table, menu } = params\n          // 读取自定义的参数\n          $table.insert(menu.record)\n        })\n\n        export default {\n          data () {\n            return {\n              tableData: [],\n              bodyMenus: [\n                [\n                  {\n                    code: 'exportData',\n                    name: '导出.csv'\n                  },\n                  {\n                    code: 'insert',\n                    name: '新增',\n                    record: {\n                      name: '默认名称'\n                    }\n                  }\n                ]\n              ]\n            }\n          },\n          created () {\n            this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n          }\n        }\n        "]}},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){i.a.highlightBlock(e)}))}},o=r,c=t("2877"),d=Object(c["a"])(o,a,l,!1,null,null,null);n["default"]=d.exports},"441a":function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},l=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("h2",[e._v("Custom Icons 自定义图标")]),t("p",{staticClass:"tip"},[e._v("如果项目已有适合的图标，例如 "),t("a",{staticClass:"link",attrs:{href:"https://www.npmjs.com/package/font-awesome",target:"_black"}},[e._v("font-awesome")]),e._v(" 图标库，可通过配置替换并自行调整相关的样式即可")]),t("pre",[e._v("    "),t("code",{staticClass:"javascript"},[e._v("\n      import VXETable from 'vxe-table'\n\n      VXETable.setup({\n        icon: {\n          sortAsc: 'vxe-icon--caret-top',\n          sortDesc: 'vxe-icon--caret-bottom',\n          filterNone: 'vxe-icon--funnel',\n          filterMatch: 'vxe-icon--funnel',\n          edit: 'vxe-icon--edit-outline',\n          treeOpen: 'vxe-icon--caret-right rotate90',\n          treeClose: 'vxe-icon--caret-right',\n          expandOpen: 'vxe-icon--arrow-right rotate90',\n          expandClose: 'vxe-icon--arrow-right',\n          refresh: 'vxe-icon--refresh',\n          refreshLoading: 'vxe-icon--refresh roll',\n          import: 'vxe-icon--upload',\n          importRemove: 'vxe-icon--close',\n          export: 'vxe-icon--download',\n          zoomIn: 'vxe-icon--zoomin',\n          zoomOut: 'vxe-icon--zoomout',\n          custom: 'vxe-icon--menu',\n          jumpPrev: 'vxe-icon--d-arrow-left',\n          jumpNext: 'vxe-icon--d-arrow-right',\n          prevPage: 'vxe-icon--arrow-left',\n          nextPage: 'vxe-icon--arrow-right',\n          jumpMore: 'vxe-icon--more',\n          modalZoomIn: 'vxe-icon--zoomin',\n          modalZoomOut: 'vxe-icon--zoomout',\n          modalClose: 'vxe-icon--close',\n          modalInfo: 'vxe-icon--info',\n          modalSuccess: 'vxe-icon--success',\n          modalWarning: 'vxe-icon--warning',\n          modalError: 'vxe-icon--error',\n          modalQuestion: 'vxe-icon--question',\n          modalLoading: 'vxe-icon--refresh roll',\n          caretBottom: 'vxe-icon--caret-bottom',\n          dropdownBottom: 'vxe-icon--arrow-bottom',\n          btnLoading: 'vxe-icon--refresh roll'\n        }\n      })\n    ")]),e._v("\n  ")])])}],s=(t("a630"),t("3ca3"),t("159b"),t("1487")),i=t.n(s),r={mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){i.a.highlightBlock(e)}))}},o=r,c=t("2877"),d=Object(c["a"])(o,a,l,!1,null,null,null);n["default"]=d.exports},"4b3a":function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("h1",[e._v("Renderer 渲染器")]),e._m(0),t("h2",[e._v("渲染器和插槽对比")]),e._m(1),t("vxe-table",{attrs:{resizable:"","highlight-current-row":"","highlight-hover-row":"","highlight-current-column":"",data:e.tableData}},[t("vxe-table-column",{attrs:{field:"name",title:"app.api.title.prop","min-width":"280","tree-node":""}}),t("vxe-table-column",{attrs:{field:"desc",title:"app.api.title.desc","min-width":"200"}}),t("vxe-table-column",{attrs:{field:"type",title:"app.api.title.type","min-width":"140"}}),t("vxe-table-column",{attrs:{field:"enum",title:"app.api.title.enum","min-width":"150"}}),t("vxe-table-column",{attrs:{field:"defVal",title:"app.api.title.defVal","min-width":"160"}})],1)],1)},l=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("p",{staticClass:"tip"},[e._v("通过渲染器你可以轻松实现筛选、单元格的复用，可以根据不同业务实现不一样的渲染器，这个功能将非常实用；比如这些插件 "),t("a",{staticClass:"link",attrs:{href:"https://www.npmjs.com/package/vxe-table-plugin-element",target:"_blank"}},[e._v("vxe-table-plugin-element")])])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("p",{staticClass:"tip"},[t("span",{staticClass:"orange"},[e._v("渲染器：抽象一切可复用的功能（类似组件的概念），实现非常简单的可配置化；")]),t("br"),t("span",{staticClass:"orange"},[e._v("插槽：自定义程度高，但需要重复写冗余代码，比较繁琐；")]),t("br"),t("span",{staticClass:"red"},[e._v("建议通过 JSX 实现更加简单，可维护性更好")]),t("br"),t("span",{staticClass:"red"},[e._v("（注：实际开发中应该将业务封装成一个组件，不要把复杂的渲染逻辑写在渲染器中）")])])}],s=(t("a630"),t("3ca3"),t("159b"),t("1487")),i=t.n(s),r={data:function(){return{tableData:[{name:"add(name, options)",desc:"添加",version:"",type:"",enum:"",defVal:"name, options",list:[]},{name:"mixin(map)",desc:"混合多个",version:"",type:"",enum:"",defVal:"map",list:[]},{name:"delete(name)",desc:"删除",version:"",type:"",enum:"",defVal:"name",list:[]}]}},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){i.a.highlightBlock(e)}))}},o=r,c=t("2877"),d=Object(c["a"])(o,a,l,!1,null,null,null);n["default"]=d.exports},"61d9":function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},l=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("h2",[e._v("npm install")]),t("p",{staticClass:"tip"},[t("a",{staticClass:"link",attrs:{href:"https://github.com/xuliangzhan/vxe-table-demo",target:"_blank"}},[e._v("安装指南")]),t("br"),e._v(" 推荐使用 npm 的方式安装，它能更好地和 "),t("a",{staticClass:"link",attrs:{href:"https://webpack.js.org/"}},[e._v("webpack")]),e._v(" 打包工具配合使用。"),t("br"),e._v(" 依赖库： "),t("a",{staticClass:"link",attrs:{href:"https://www.npmjs.com/package/xe-utils"}},[e._v("xe-utils2.2+")]),e._v(" "),t("a",{staticClass:"link",attrs:{href:"https://cn.vuejs.org/v2/guide/components-slots.html#%E5%8A%A8%E6%80%81%E6%8F%92%E6%A7%BD%E5%90%8D"}},[e._v("vue2.6+")]),t("br"),t("span",{staticClass:"red"},[e._v("（注：如果是 IE 浏览器可以使用 "),t("a",{staticClass:"link",attrs:{href:"https://www.npmjs.com/package/babel-polyfill"}},[e._v("babel-polyfill")]),e._v(" 来解决兼容性问题）")])]),t("pre",[e._v("    "),t("code",{staticClass:"shell"},[e._v("\n      npm install xe-utils vxe-table\n    ")]),e._v("\n    "),t("code",{staticClass:"javascript"},[e._v("\n      import Vue from 'vue'\n      import 'xe-utils'\n      import VXETable from 'vxe-table'\n      import 'vxe-table/lib/index.css'\n\n      Vue.use(VXETable)\n    ")]),e._v("\n  ")]),t("h2",[e._v("CDN")]),t("p",{staticClass:"tip"},[e._v("可以通过 "),t("a",{staticClass:"link",attrs:{href:"https://unpkg.com/vxe-table/"}},[e._v("unpkg")]),e._v(" 或 "),t("a",{staticClass:"link",attrs:{href:"https://cdn.jsdelivr.net/npm/vxe-table/"}},[e._v("cdnjs")]),e._v(" 获取到最新版本的资源，并在页面上引入即可")]),t("pre",[e._v("    "),t("code",{staticClass:"xml"},[e._v('\n      \x3c!-- 引入样式 --\x3e\n      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vxe-table/lib/index.css">\n      \x3c!-- 引入脚本 --\x3e\n      <script src="https://cdn.jsdelivr.net/npm/xe-utils"><\/script>\n      <script src="https://cdn.jsdelivr.net/npm/vxe-table"><\/script>\n    ')]),e._v("\n  ")])])}],s=(t("a630"),t("3ca3"),t("159b"),t("1487")),i=t.n(s),r={mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){i.a.highlightBlock(e)}))}},o=r,c=t("2877"),d=Object(c["a"])(o,a,l,!1,null,null,null);n["default"]=d.exports},"8dea":function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},l=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("h2",[e._v("size")]),t("pre",[e._v("    "),t("code",{staticClass:"xml"},[e._v("\n      每个组件都有 size 属性，默认是继承父组件，所以只要给局部的父组件设置 size，所有后代组件一律继承，该功能对于很多场景中都非常有用\n    ")]),e._v("\n  ")]),t("h2",[e._v("Default Global Props")]),t("pre",[e._v("    "),t("code",{staticClass:"javascript"},[e._v("\n      import VXETable from 'vxe-table'\n\n      VXETable.setup({\n        // 默认表格参数\n        size: 'small',\n        showOverflow: null,\n        showHeaderOverflow: null,\n        align: null,\n        headerAlign: null,\n        stripe: false,\n        border: false,\n        resizable: false,\n        showHeader: true,\n        highlightCurrentRow: false,\n        highlightHoverRow: false,\n        highlightCurrentColumn: false,\n        highlightHoverColumn: false,\n        export: {}, // 导出默认参数\n        import: {}, // 导入默认参数\n        zIndex: 100, // 全局 zIndex 起始值\n        rowId: '_XID',\n        radioConfig: {\n          trigger: 'default'\n        },\n        checkboxConfig: {\n          trigger: 'default'\n        },\n        sortConfig: {\n          remote: false,\n          trigger: 'default'\n        },\n        filterConfig: {\n          remote: false\n        },\n        expandConfig: {\n          trigger: 'default'\n        },\n        treeConfig: {\n          children: 'children',\n          hasChild: 'hasChild',\n          indent: 20\n        },\n        tooltipConfig: {\n          theme: 'dark'\n        },\n        validConfig: {\n          message: 'default'\n        },\n        // 版本号（对于某些带 Storage 数据储存的功能有用到，上升版本号可以用于重置 Storage 数据）\n        version: 0,\n        // 配置式表格的默认参数\n        grid: {\n          proxyConfig: {\n            autoLoad: true,\n            message: true,\n            props: {\n              list: null,\n              result: 'result',\n              total: 'page.total'\n            },\n            // 查询\n            beforeQuery ({ options, page, sort, filters }) {\n              return fetch('url', { method: 'GET' }).then(response => response.json())\n            },\n            // 删除\n            beforeDelete ({ options, body }) {\n              return fetch('url', { method: 'DELETE' }).then(response => response.json())\n            },\n            // 保存\n            beforeSave ({ options, body }) {\n              return fetch('url', { method: 'POST', body }).then(response => response.json())\n            }\n          }\n        },\n        // 默认快捷菜单\n        menu: {},\n        // 默认 tooltip 主题样式\n        tooltip: {\n          trigger: 'hover',\n          theme: 'dark'\n        },\n        // 默认分页参数\n        pager: {\n          perfect: true,\n          pageSize: 10,\n          pagerCount: 7,\n          pageSizes: [10, 15, 20, 50, 100],\n          layouts: ['PrevJump', 'PrevPage', 'Jump', 'PageCount', 'NextPage', 'NextJump', 'Sizes', 'Total'] // 非常灵活的分页布局，支持任意位置随意换\n        },\n        // 默认工具栏参数\n        toolbar: {\n          refresh: false,\n          import: {\n            mode: 'covering'\n          },\n          export: {\n            types: ['csv', 'html', 'xml', 'txt']\n          },\n          resizable: {\n            storage: false\n          },\n          custom: {\n            storage: false,\n            isFooter: true\n          },\n          buttons: []\n        },\n        // 默认模态窗口参数\n        modal: {\n          minWidth: 340,\n          minHeight: 200,\n          lockView: true,\n          mask: true,\n          duration: 3000,\n          marginSize: 8,\n          dblclickZoom: true,\n          remember: false,\n          animat: true\n        },\n        // 默认优化配置项\n        optimization : {\n          animat: true,\n          delayHover: 250,\n          scrollX: {\n            gt: 100\n          },\n          scrollY: {\n            gt: 500\n          }\n        },\n        // 集成国际化（将对列头、校验提示..进行自动翻译）\n        translate: : key => i18n.t(key)\n      })\n    ")]),e._v("\n  ")])])}],s=(t("a630"),t("3ca3"),t("159b"),t("1487")),i=t.n(s),r={mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){i.a.highlightBlock(e)}))}},o=r,c=t("2877"),d=Object(c["a"])(o,a,l,!1,null,null,null);n["default"]=d.exports},a325:function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("h2",[e._v("Internationalization 国际化")]),e._m(0),t("pre",[e._v("    "),t("code",{staticClass:"shell"},[e._v("\n      npm install vue-i18n\n    ")]),e._v("\n    "),t("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n  ")]),t("h2",[e._v("集成国际化")]),e._m(1),t("pre",[e._v("    "),t("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n    "),t("code",{staticClass:"html"},[e._v(e._s(e.demoCodes[2]))]),e._v("\n  ")])])},l=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("p",{staticClass:"tip"},[e._v("目前支持的"),t("a",{staticClass:"link",attrs:{href:"https://github.com/xuliangzhan/vxe-table/tree/master/packages/locale/lang",target:"_blank"}},[e._v("国际化列表")]),e._v("，若希望使用指定语言，则需要进行多语言设置。以中/英文为例"),t("br"),t("a",{staticClass:"link",attrs:{href:"https://github.com/xuliangzhan/vxe-table-demo/tree/master/vxe-table-by-vue-i18n",target:"_blank"}},[e._v("项目示例")])])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("p",{staticClass:"tip"},[e._v("若希望在项目中支持全局自动翻译，可以通过全局参数开启（将对列头、校验提示..进行自动翻译）"),t("br"),t("a",{staticClass:"link",attrs:{href:"https://github.com/xuliangzhan/vxe-table-demo/tree/master/vxe-table-by-vue-i18n",target:"_blank"}},[e._v("项目示例")])])}],s=(t("a630"),t("3ca3"),t("159b"),t("1487")),i=t.n(s),r={data:function(){return{demoCodes:["\n        import Vue from 'vue'\n        import VueI18n from 'vxe-i18n'\n        import VXETable from 'vxe-table'\n        import zhCNLocat from 'vxe-table/lib/locale/lang/zh_CN'\n        import enLocat from 'vxe-table/lib/locale/lang/en'\n\n        const messages = {\n          zh_CN: {\n            ...zhCNLocat\n          },\n          en: {\n            ...enLocat\n          }\n        }\n\n        const i18n = new VueI18n({\n          locale: 'zh_CN',\n          messages,\n        })\n\n        Vue.use(VXETable, {\n          // 对组件内置的提示语进行国际化翻译\n          i18n: (key, value) => i18n.t(key, value)\n        })\n\n        new Vue({ i18n }).$mount('#app')\n        ","\n        Vue.use(VXETable, {\n          // 对参数的内容自动进行国际化翻译（只对支持国际化的有效）\n          translate: key => i18n.t(key)\n        })\n        ",'\n        <vxe-table\n          border\n          height="600"\n          :data="tableData">\n          <vxe-table-column field="name" title="app.body.label.name"></vxe-table-column>\n          <vxe-table-column field="age" title="app.body.label.age"></vxe-table-column>\n          <vxe-table-column field="sex" title="app.body.label.sex"></vxe-table-column>\n        </vxe-table>\n        ']}},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){i.a.highlightBlock(e)}))}},o=r,c=t("2877"),d=Object(c["a"])(o,a,l,!1,null,null,null);n["default"]=d.exports},d0c5:function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("p",{staticClass:"tip"},[e._v(" 可编辑渲染器 "),t("table-column-api-link",{attrs:{prop:"edit-render"}}),t("br"),e._v(" 默认支持原生的：input、textarea、select"),t("br"),e._v(" 配置参数："),t("br"),e._v(" autofocus 自动聚焦的类名"),t("br"),e._v(" renderEdit (h, editRender, { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }, context) 编辑的渲染函数"),t("br"),e._v(" renderCell (h, editRender, { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }, context) 显示的渲染函数"),t("br"),t("span",{staticClass:"red"},[e._v("（注：实际开发中应该将业务封装成一个组件，不要把复杂的渲染逻辑写在渲染器中）")])],1),t("vxe-table",{attrs:{border:"",data:e.tableData,"edit-config":{trigger:"click",mode:"row"}}},[t("vxe-table-column",{attrs:{type:"seq",width:"60"}}),t("vxe-table-column",{attrs:{field:"name",title:"Name","edit-render":{name:"MyInput"}}}),t("vxe-table-column",{attrs:{field:"sex",title:"sex","edit-render":{name:"MyInput"}}}),t("vxe-table-column",{attrs:{field:"age",title:"Age","edit-render":{name:"MyInput"}}})],1),t("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),t("pre",[e._v("    "),t("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),t("code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n    "),t("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[2]))]),e._v("\n  ")])],1)},l=[],s=(t("a630"),t("fb6a"),t("3ca3"),t("159b"),t("1487")),i=t.n(s),r=(t("b337"),{data:function(){return{tableData:[],demoCodes:['\n        // 创建一个简单输入框渲染器\n        VXETable.renderer.add(\'MyInput\', {\n          // 可编辑激活模板\n          renderEdit (h, editRender, { row, column }) {\n            return [\n              <input class="my-cell" text="text" value={ row[column.property] } onInput={ evnt => { row[column.property] = evnt.target.value }}/>\n            ]\n          },\n          // 可编辑显示模板\n          renderCell (h, editRender, { row, column }) {\n            return [\n              <span>{ row[column.property] }</span>\n            ]\n          }\n        })\n        ','\n        <vxe-table\n          border\n          :data="tableData"\n          :edit-config="{trigger: \'click\', mode: \'row\'}">\n          <vxe-table-column type="seq" width="60"></vxe-table-column>\n          <vxe-table-column field="name" title="Name" :edit-render="{name: \'MyInput\'}"></vxe-table-column>\n          <vxe-table-column field="sex" title="sex" :edit-render="{name: \'MyInput\'}"></vxe-table-column>\n          <vxe-table-column field="age" title="Age" :edit-render="{name: \'MyInput\'}"></vxe-table-column>\n        </vxe-table>\n        ',"\n        export default {\n          data () {\n            return {\n              tableData: []\n            }\n          },\n          created () {\n            this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n          }\n        }\n        "]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){i.a.highlightBlock(e)}))}}),o=r,c=t("2877"),d=Object(c["a"])(o,a,l,!1,null,null,null);n["default"]=d.exports},f8c4:function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("p",{staticClass:"tip"},[e._v(" 筛选渲染器 "),t("table-column-api-link",{attrs:{prop:"filter-render"}}),t("br"),e._v(" 默认支持原生的：input、textarea、select"),t("br"),e._v(" 配置参数："),t("br"),e._v(" className 自定义容器的 className"),t("br"),e._v(" isFooter 是否显示底部按钮"),t("br"),e._v(" renderFilter (h, filterRender, { column, columnIndex, $columnIndex }, context) 渲染函数"),t("br"),e._v(" filterMethod ({ option, row, column }) 筛选函数"),t("br"),t("span",{staticClass:"red"},[e._v("（注：实际开发中应该将业务封装成一个组件，不要把复杂的渲染逻辑写在渲染器中）")])],1),t("vxe-table",{attrs:{border:"",data:e.tableData}},[t("vxe-table-column",{attrs:{type:"seq",width:"60"}}),t("vxe-table-column",{attrs:{field:"nickname",title:"Nickname",filters:[{data:null}],"filter-render":{name:"input",attrs:{placeholder:"请输入名字"}}}}),t("vxe-table-column",{attrs:{field:"sex",title:"sex",filters:[{data:null}],"filter-render":{name:"select",options:e.sexList}}}),t("vxe-table-column",{attrs:{field:"age",title:"Age",filters:[{data:null}],"filter-render":{name:"MyFilter"}}}),t("vxe-table-column",{attrs:{field:"name",title:"实现复杂的筛选",filters:[{data:{type:"has",isCase:!0,name:""}}],"filter-render":{name:"MyComplexFilter"}}}),t("vxe-table-column",{attrs:{field:"role",title:"实现Excel复杂的筛选",sortable:"",filters:[{data:{vals:[],sVal:"",fMenu:"",f1Type:"",f1Val:"",fMode:"and",f2Type:"",f2Val:""}}],"filter-render":{name:"MyExcelFilter"}}})],1),t("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),t("pre",[e._v("    "),t("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),t("code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n    "),t("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[2]))]),e._v("\n    "),t("code",{staticClass:"CSS"},[e._v(e._s(e.demoCodes[3]))]),e._v("\n    "),t("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[4]))]),e._v("\n    "),t("code",{staticClass:"CSS"},[e._v(e._s(e.demoCodes[5]))]),e._v("\n  ")])],1)},l=[],s=(t("a630"),t("fb6a"),t("3ca3"),t("159b"),t("1487")),i=t.n(s),r=(t("87ba"),{data:function(){return{tableData:[],sexList:[{label:"全部",value:""},{label:"男",value:"1"},{label:"女",value:"0"}],demoCodes:['\n        // 创建一个支持输入的筛选器（仅用于简单示例，实际开发中应该封装成一个组件，不应该把复杂的渲染逻辑写在渲染器中）\n        VXETable.renderer.add(\'MyFilter\', {\n          // 筛选模板\n          renderFilter (h, filterRender, params, context) {\n            let { column } = params\n            return column.filters.map(item => {\n              return <input\n                type="text"\n                value={ item.data }\n                onInput={ evnt => {\n                  item.data = evnt.target.value\n                  let checked = !!item.data\n                  context.changeOption(evnt, checked, item)\n                } }/>\n            })\n          },\n          // 筛选方法\n          filterMethod ({ option, row, column }) {\n            let { data } = option\n            let cellValue = XEUtils.get(row, column.property)\n            /* eslint-disable eqeqeq */\n            return cellValue == data\n          }\n        })\n\n        // 创建一个复杂的渲染器（仅用于简单示例，实际开发中应该封装成一个组件，不应该把复杂的渲染逻辑写在渲染器中）\n        VXETable.renderer.add(\'MyComplexFilter\', {\n          // 不显示底部按钮，使用自定义的按钮\n          isFooter: false,\n          // 筛选模板\n          renderFilter (h, filterRender, params, context) {\n            const { column } = params\n            return column.filters.map((item, index) => {\n              const { data } = item\n              return <div class="cmplex-filter">\n                <div class="f-type">\n                  <vxe-radio v-model={ data.type } name="fType" label="has">包含</vxe-radio>\n                  <vxe-radio v-model={ data.type } name="fType" label="eq">等于</vxe-radio>\n                  <vxe-radio v-model={ data.type } name="fType" label="gt">大于</vxe-radio>\n                  <vxe-radio v-model={ data.type } name="fType" label="lt">小于</vxe-radio>\n                </div>\n                <div class="f-name">\n                  <vxe-input v-model={ data.name } type="text" placeholder="请输入名称" onInput={ e => { context.changeOption(e, !!data.name, item) } }></vxe-input>\n                </div>\n                <div class="f-iscase">\n                  <vxe-checkbox v-model={ data.isCase }>不区分大小写</vxe-checkbox>\n                </div>\n                <div class="f-footer">\n                  <vxe-button type="primary" onClick={ e => { context.confirmFilter() } }>确认</vxe-button>\n                  <vxe-button onClick={ e => { context.resetFilter() } }>重置</vxe-button>\n                </div>\n              </div>\n            })\n          },\n          // 筛选方法\n          filterMethod ({ option, row, column }) {\n            let cellValue = XEUtils.get(row, column.property)\n            let { type, name, isCase } = option.data\n            if (cellValue) {\n              if (isCase) {\n                cellValue = cellValue.toLowerCase()\n                name = name.toLowerCase()\n              }\n              switch (type) {\n                case \'has\':\n                  return cellValue.indexOf(name) > -1\n                case \'eq\':\n                  /* eslint-disable eqeqeq */\n                  return cellValue == name\n                case \'gt\':\n                  return cellValue > name\n                case \'lt\':\n                  return cellValue < name\n              }\n            }\n            return false\n          }\n        })\n        ','\n        <vxe-table border :data="tableData">\n          <vxe-table-column type="seq" width="60"></vxe-table-column>\n          <vxe-table-column\n            field="nickname"\n            title="Nickname"\n            :filters="[{data: null}]"\n            :filter-render="{name: \'input\', attrs: {placeholder: \'请输入名字\'}}"></vxe-table-column>\n          <vxe-table-column\n            field="sex"\n            title="sex"\n            :filters="[{data: null}]"\n            :filter-render="{name: \'select\', options: sexList}"></vxe-table-column>\n          <vxe-table-column\n            field="age"\n            title="Age"\n            :filters="[{data: null}]"\n            :filter-render="{name: \'MyFilter\'}"></vxe-table-column>\n          <vxe-table-column\n            field="name"\n            title="高级筛选（实现复杂的筛选）"\n            :filters="[{data: {type: \'has\', isCase: true, name: \'\'}}]"\n            :filter-render="{name: \'MyComplexFilter\'}"></vxe-table-column>\n        </vxe-table>\n        ',"\n        export default {\n          data () {\n            return {\n              tableData: [],\n              sexList: [\n                {\n                  label: '全部',\n                  value: ''\n                },\n                {\n                  label: '男',\n                  value: '1'\n                },\n                {\n                  label: '女',\n                  value: '0'\n                }\n              ]\n            }\n          },\n          created () {\n            this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n          }\n        }\n        ","\n        .cmplex-filter {\n          width: 260px;\n          padding: 0 8px;\n        }\n        .cmplex-filter .f-type {\n          padding: 8px 0;\n        }\n        .cmplex-filter .f-iscase {\n          padding: 12px 0;\n        }\n        .cmplex-filter .f-footer {\n          text-align: center;\n        }\n        ","\n        // 创建一个实现Excel的筛选器（仅用于简单示例，实际开发中应该封装成一个组件，不应该把复杂的渲染逻辑写在渲染器中）\n        VXETable.renderer.add('MyExcelFilter', {\n          className: 'myexcel-filter-render',\n          // 不显示底部按钮，使用自定义的按钮\n          isFooter: false,\n          // 筛选模板\n          renderFilter (h, filterRender, params, context) {\n            const { $table, column } = params\n            const { fullData } = $table.getTableData()\n            const colValues = Object.keys(XEUtils.groupBy(fullData, column.property))\n            const caseGroups = [\n              [\n                { value: 'equal', label: '等于' },\n                { value: 'ne', label: '不等于' }\n              ],\n              [\n                { value: 'greater', label: '大于' },\n                { value: 'ge', label: '大于或等于' },\n                { value: 'less', label: '小于' },\n                { value: 'le', label: '小于或等于' },\n                { value: 'between', label: '介于' }\n              ],\n              [\n                { value: 'top10', label: '前 10 项' },\n                { value: 'gt_mean', label: '高于平均值' },\n                { value: 'lt_mean', label: '低于平均值' },\n                { value: 'custom', label: '自定义筛选' }\n              ]\n            ]\n            const allCaseList = [\n              { value: '', label: '' },\n              { value: '1', label: '等于' },\n              { value: '2', label: '不等于' },\n              { value: '3', label: '大于' },\n              { value: '4', label: '大于或等于' },\n              { value: '5', label: '小于' },\n              { value: '6', label: '小于或等于' },\n              { value: '8', label: '开头是' },\n              { value: '9', label: '开头不是' },\n              { value: '10', label: '结尾是' },\n              { value: '11', label: '结尾不是' },\n              { value: '12', label: '包含' },\n              { value: '13', label: '不包含' }\n            ]\n            return column.filters.map((item, index) => {\n              const { data } = item\n              const sValues = data.sVal ? colValues.filter(val => val.indexOf(data.sVal) > -1) : colValues\n              const isAll = sValues.every(val => data.vals.indexOf(val) > -1)\n              return <div class=\"myexcel-filter\">\n                <div class=\"me-list\">\n                  <ul class=\"me-group\">\n                    <li class=\"me-menu\">\n                      <i class=\"fa fa-sort-alpha-asc me-menu-left-icon\"></i>\n                      <span>升序</span>\n                    </li>\n                    <li class=\"me-menu\">\n                      <i class=\"fa fa-sort-alpha-desc me-menu-left-icon\"></i>\n                      <span>降序</span>\n                    </li>\n                  </ul>\n                  <ul class=\"me-group\">\n                    <li class=\"me-menu\" onClick={ e => { context.resetFilter() } }>\n                      <span>清除筛选</span>\n                    </li>\n                    <li class=\"me-menu\">\n                      <i class=\"fa fa-filter me-menu-left-icon\"></i>\n                      <span>筛选条件</span>\n                      <i class=\"fa fa-caret-right me-menu-right-icon\"></i>\n                      <div class=\"me-child-list\">\n                        {\n                          caseGroups.map(cList => {\n                            return <ul class=\"me-child-group\">\n                              {\n                                cList.map(cItem => {\n                                  return <li class=\"me-child-menu\" onClick={ e => {\n                                    data.fMode = 'and'\n                                    data.f1Val = ''\n                                    data.f2Val = ''\n                                    switch (cItem.value) {\n                                      case 'equal':\n                                        data.f1Type = '1'\n                                        data.f2Type = ''\n                                        break\n                                      case 'ne':\n                                        data.f1Type = '2'\n                                        data.f2Type = ''\n                                        break\n                                      case 'greater':\n                                        data.f1Type = '3'\n                                        data.f2Type = ''\n                                        break\n                                      case 'ge':\n                                        data.f1Type = '4'\n                                        data.f2Type = ''\n                                        break\n                                      case 'less':\n                                        data.f1Type = '5'\n                                        data.f2Type = ''\n                                        break\n                                      case 'le':\n                                        data.f1Type = '6'\n                                        data.f2Type = ''\n                                        break\n                                      case 'between':\n                                        data.f1Type = '4'\n                                        data.f2Type = '6'\n                                        break\n                                      default:\n                                        return\n                                    }\n                                    $table.closeFilter()\n                                    $table.$XModal({\n                                      title: '自定义自动筛选方式',\n                                      width: 600,\n                                      slots: {\n                                        default: ({ $modal }, h) => {\n                                          return [\n                                            <div class=\"me-popup\">\n                                              <div class=\"me-popup-title\">显示行</div>\n                                              <div class=\"me-popup-filter me-popup-f1\">\n                                                <select v-model={ data.f1Type }>\n                                                  {\n                                                    allCaseList.map(cItem => {\n                                                      return <option value={ cItem.value }>{ cItem.label }</option>\n                                                    })\n                                                  }\n                                                </select>\n                                                <input v-model={ data.f1Val }/>\n                                              </div>\n                                              <div class=\"me-popup-concat\">\n                                                <vxe-radio v-model={ data.fMode } label=\"and\" name=\"fmode\">与</vxe-radio>\n                                                <vxe-radio v-model={ data.fMode } label=\"or\" name=\"fmode\">或</vxe-radio>\n                                              </div>\n                                              <div class=\"me-popup-filter me-popup-f2\">\n                                                <select v-model={ data.f2Type }>\n                                                  {\n                                                    allCaseList.map(cItem => {\n                                                      return <option value={ cItem.value }>{ cItem.label }</option>\n                                                    })\n                                                  }\n                                                </select>\n                                                <input v-model={ data.f2Val }/>\n                                              </div>\n                                              <div class=\"me-popup-describe\">\n                                                <span>可用 ? 代表单个字符<br/>用 * 代表任意多个字符</span>\n                                              </div>\n                                              <div class=\"me-popup-footer\">\n                                                <button onClick={ e => {\n                                                  item.checked = true\n                                                  $modal.close()\n                                                  context.confirmFilter()\n                                                } }>确认</button>\n                                                <button onClick={ e => { $modal.close() } }>取消</button>\n                                              </div>\n                                            </div>\n                                          ]\n                                        }\n                                      }\n                                    })\n                                  } }>{ cItem.label }</li>\n                                })\n                              }\n                            </ul>\n                          })\n                        }\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n                <div class=\"me-search\">\n                  <div class=\"header\">\n                    <input v-model={ data.sVal } placeholder=\"搜索\"/>\n                    <i class=\"fa fa-search me-search-icon\"></i>\n                  </div>\n                  {\n                    sValues.length\n                      ? <ul class=\"body\">\n                        <li class=\"me-val-item\" onClick={ e => {\n                          if (isAll) {\n                            data.vals.splice(0, data.vals.length)\n                          } else {\n                            data.vals = sValues\n                          }\n                        } }>\n                          <i class={ isAll ? 'fa fa-check-square-o me-val-icon' : 'fa fa-square-o me-val-icon' } ></i>\n                          <span>(全选)</span>\n                        </li>\n                        {\n                          sValues.map(val => {\n                            return <li class=\"me-val-item\" onClick={ e => {\n                              let vIndex = data.vals.indexOf(val)\n                              if (vIndex === -1) {\n                                data.vals.push(val)\n                              } else {\n                                data.vals.splice(vIndex, 1)\n                              }\n                            } }>\n                              <i class={ data.vals.indexOf(val) === -1 ? 'fa fa-square-o me-val-icon' : 'fa fa-check-square-o me-val-icon' } ></i>\n                              <span>{ val }</span>\n                            </li>\n                          })\n                        }\n                      </ul>\n                      : <div class=\"body\">\n                        <div class=\"me-search-empty\">无匹配项</div>\n                      </div>\n                  }\n                </div>\n                <div class=\"me-footer\">\n                  <button onClick={ e => {\n                    data.f1 = ''\n                    data.f2 = ''\n                    item.checked = true\n                    context.confirmFilter()\n                  } }>确认</button>\n                  <button onClick={ e => { context.resetFilter() } }>重置</button>\n                </div>\n              </div>\n            })\n          },\n          // 筛选方法\n          filterMethod ({ option, row, column }) {\n            let cellValue = XEUtils.get(row, column.property)\n            let { vals, f1Type, f1Val, fMode, f2Type, f2Val } = option.data\n            if (cellValue) {\n              if (f1Type || f2Type) {\n                // 筛选条件\n                let f1Rest = true\n                let f2Rest = true\n                switch (f1Type) {\n                  case '1':\n                    f1Rest = cellValue == f1Val\n                    break\n                  case '2':\n                    f1Rest = cellValue != f1Val\n                    break\n                }\n                switch (f2Type) {\n                  case '1':\n                    f2Rest = cellValue == f2Val\n                    break\n                  case '2':\n                    f2Rest = cellValue != f2Val\n                    break\n                }\n                if (fMode === 'and') {\n                  return f1Rest && f2Rest\n                }\n                return f1Rest || f2Rest\n              } else if (vals.length) {\n                // 确定\n                return vals.includes(cellValue)\n              }\n            }\n            return false\n          }\n        })\n        ",'\n        .vxe-table--filter-wrapper.myexcel-filter-render .vxe-table--filter-template {\n          overflow: initial;\n          max-height: initial;\n          padding: 0;\n        }\n        .myexcel-filter {\n          user-select: none;\n        }\n        .myexcel-filter .me-list .me-group {\n          position: relative;\n          margin: 0;\n          padding: 0;\n        }\n        .myexcel-filter .me-list .me-group:after {\n          content: "";\n          position: absolute;\n          width: 190px;\n          right: 0;\n          bottom: 0;\n          border-bottom: 1px solid #E2E4E7;\n        }\n        .myexcel-filter .me-list .me-group .me-menu {\n          position: relative;\n          padding: 4px 20px 4px 30px;\n          cursor: pointer;\n        }\n        .myexcel-filter .me-list .me-group .me-menu:hover {\n          background-color: #C5C5C5;\n        }\n        .myexcel-filter .me-list .me-group .me-menu-left-icon {\n          position: absolute;\n          left: 10px;\n          top: 6px;\n        }\n        .myexcel-filter .me-list .me-group .me-menu-right-icon {\n          position: absolute;\n          right: 10px;\n          top: 6px;\n        }\n        .myexcel-filter .me-list .me-group .me-menu:hover .me-child-list {\n          display: block;\n        }\n        .myexcel-filter .me-list .me-group .me-menu .me-child-list {\n          display: none;\n          position: absolute;\n          top: 0;\n          right: -120px;\n          width: 120px;\n          background-color: #fff;\n          border: 1px solid #DADCE0;\n          box-shadow: 3px 3px 4px -2px rgba(0, 0, 0, 0.6);\n        }\n        .myexcel-filter .me-list .me-group .me-menu .me-child-group {\n          position: relative;\n        }\n        .myexcel-filter .me-list .me-group .me-menu .me-child-group:after {\n          content: "";\n          position: absolute;\n          width: 90px;\n          right: 0;\n          bottom: 0;\n          border-bottom: 1px solid #E2E4E7;\n        }\n        .myexcel-filter .me-list .me-group .me-menu .me-child-group > .me-child-menu {\n          padding: 4px 20px 4px 30px;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n        }\n        .myexcel-filter .me-list .me-group .me-menu .me-child-group > .me-child-menu:hover {\n          background-color: #C5C5C5;\n        }\n        .myexcel-filter .me-search {\n          padding: 0 10px 0 30px;\n        }\n        .myexcel-filter .me-search .header {\n          position: relative;\n          padding: 5px 0;\n        }\n        .myexcel-filter .me-search .header > input {\n          border: 1px solid #ABABAB;\n          padding: 0 20px 0 2px;\n          width: 200px;\n          height: 22px;\n          line-height: 22px;\n        }\n        .myexcel-filter .me-search .header > .me-search-icon {\n          position: absolute;\n          right: 5px;\n          top: 10px;\n        }\n        .myexcel-filter .me-search .body {\n          margin: 0;\n          border: 1px solid #E2E4E7;\n          padding: 2px 10px;\n          overflow: auto;\n          height: 140px;\n        }\n        .myexcel-filter .me-search .body .me-search-empty {\n          text-align: center;\n          padding-top: 20px;\n        }\n        .myexcel-filter .me-search .body .me-val-item {\n          cursor: pointer;\n          padding: 2px 0;\n        }\n        .myexcel-filter .me-search .body .me-val-item .me-val-icon {\n          width: 16px;\n        }\n        .myexcel-filter .me-footer {\n          text-align: right;\n          padding: 10px 10px 10px 0;\n        }\n        .myexcel-filter .me-footer button {\n          padding: 0 15px;\n          margin-left: 15px;\n        }\n        .me-popup .me-popup-filter {\n          padding-left: 30px;\n        }\n        .me-popup .me-popup-filter > select {\n          height: 22px;\n          line-height: 22px;\n          width: 100px;\n        }\n        .me-popup .me-popup-filter > input {\n          height: 22px;\n          line-height: 22px;\n          margin-left: 10px;\n          width: 400px;\n        }\n        .me-popup .me-popup-describe {\n          padding: 20px 0 10px 0;\n        }\n        .me-popup .me-popup-concat {\n          padding-left: 50px;\n        }\n        .me-popup .me-popup-footer {\n          text-align: right;\n        }\n        .me-popup .me-popup-footer button {\n          padding: 0 15px;\n          margin-left: 15px;\n        }\n        ']}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){i.a.highlightBlock(e)}))}}),o=r,c=t("2877"),d=Object(c["a"])(o,a,l,!1,null,null,null);n["default"]=d.exports},f924:function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},l=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("h2",[e._v("Import 完整引入")]),t("pre",[e._v("    "),t("code",{staticClass:"shell"},[e._v("\n      npm install xe-utils vxe-table\n    ")]),e._v("\n    "),t("code",{staticClass:"javascript"},[e._v("\n      import Vue from 'vue'\n      import 'xe-utils'\n      import VXETable from 'vxe-table'\n      import 'vxe-table/lib/index.css'\n\n      Vue.use(VXETable)\n    ")]),e._v("\n  ")]),t("h2",[e._v("Import on demand 按需引入")]),t("p",{staticClass:"tip"},[t("a",{staticClass:"link",attrs:{href:"https://github.com/xuliangzhan/vxe-table-demo",target:"_blank"}},[e._v("安装指南")]),t("br"),e._v("借助插件 "),t("a",{staticClass:"link",attrs:{href:"https://www.npmjs.com/package/babel-plugin-import",target:"_blank"}},[e._v("babel-plugin-import")]),e._v(" 可以实现按需加载模块，减少文件体积。然后在文件 .babelrc 中配置")]),t("pre",[e._v("    "),t("code",{staticClass:"shell"},[e._v("\n      npm install babel-plugin-import -D\n    ")]),e._v("\n    "),t("code",{staticClass:"javascript"},[e._v('\n      {\n        "plugins": [\n          [\n            "import",\n            {\n              "libraryName": "vxe-table",\n              "style": true // 样式是否也按需加载\n            }\n          ]\n        ]\n      }\n    ')]),e._v("\n  ")]),t("p",{staticClass:"tip"},[e._v("最后这样按需引入模块，就可以减小体积了")]),t("pre",[e._v("    "),t("code",{staticClass:"javascript"},[e._v("\n      import Vue from 'vue'\n      import XEUtils from 'xe-utils'\n      import {\n        // 实例\n        VXETable,\n        // 依赖\n        Icon,\n        Column,\n        Header,\n        Body,\n        Footer,\n        Filter,\n        Loading,\n        Tooltip,\n        Grid,\n        Excel,\n        Menu,\n        Toolbar,\n        Pager,\n        Checkbox,\n        Radio,\n        Input,\n        Button,\n        Modal,\n        Export,\n        Keyboard,\n        Resize,\n        // 核心\n        Table\n      } from 'vxe-table'\n      import zhCNLocat from 'vxe-table/lib/locale/lang/zh-CN'\n\n      // 按需加载的方式默认是不带国际化的，需要自行导入\n      VXETable.setup({\n        i18n: (key, value) => XEUtils.get(zhCNLocat, key)\n      })\n\n      // 先安装依赖模块\n      Vue.use(Icon)\n      Vue.use(Column)\n      Vue.use(Header)\n      Vue.use(Body)\n      Vue.use(Footer)\n      Vue.use(Filter)\n      Vue.use(Loading)\n      Vue.use(Tooltip)\n      Vue.use(Grid)\n      Vue.use(Excel)\n      Vue.use(Menu)\n      Vue.use(Toolbar)\n      Vue.use(Pager)\n      Vue.use(Checkbox)\n      Vue.use(Radio)\n      Vue.use(Input)\n      Vue.use(Button)\n      Vue.use(Modal)\n      Vue.use(Export)\n      Vue.use(Keyboard)\n      Vue.use(Resize)\n      // 再安装核心库\n      Vue.use(Table)\n    ")]),e._v("\n  ")])])}],s=(t("a630"),t("3ca3"),t("159b"),t("1487")),i=t.n(s),r={mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){i.a.highlightBlock(e)}))}},o=r,c=t("2877"),d=Object(c["a"])(o,a,l,!1,null,null,null);n["default"]=d.exports}}]);